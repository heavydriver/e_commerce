[{"/home/savage/Desktop/programming/e_commerce/src/index.js":"1","/home/savage/Desktop/programming/e_commerce/src/components/Cart/Cart.jsx":"2","/home/savage/Desktop/programming/e_commerce/src/components/Cart/styles.js":"3","/home/savage/Desktop/programming/e_commerce/src/components/Cart/CartItem/CartItem.jsx":"4","/home/savage/Desktop/programming/e_commerce/src/components/CheckoutForm/AddressForm.jsx":"5","/home/savage/Desktop/programming/e_commerce/src/App.js":"6","/home/savage/Desktop/programming/e_commerce/src/components/CheckoutForm/Checkout/Checkout.jsx":"7","/home/savage/Desktop/programming/e_commerce/src/components/CheckoutForm/Checkout/styles.js":"8","/home/savage/Desktop/programming/e_commerce/src/components/index.js":"9","/home/savage/Desktop/programming/e_commerce/src/components/Products/Products.jsx":"10","/home/savage/Desktop/programming/e_commerce/src/components/Products/styles.js":"11","/home/savage/Desktop/programming/e_commerce/src/components/Navbar/styles.js":"12","/home/savage/Desktop/programming/e_commerce/src/components/CheckoutForm/Review.jsx":"13","/home/savage/Desktop/programming/e_commerce/src/lib/commerce.js":"14","/home/savage/Desktop/programming/e_commerce/src/components/Navbar/Navbar.jsx":"15","/home/savage/Desktop/programming/e_commerce/src/components/Cart/CartItem/styles.js":"16","/home/savage/Desktop/programming/e_commerce/src/components/Products/Product/styles.js":"17","/home/savage/Desktop/programming/e_commerce/src/components/CheckoutForm/CustomTextField.jsx":"18","/home/savage/Desktop/programming/e_commerce/src/components/Products/Product/Product.jsx":"19","/home/savage/Desktop/programming/e_commerce/src/components/CheckoutForm/PaymentForm.jsx":"20"},{"size":146,"mtime":1610933392648,"results":"21","hashOfConfig":"22"},{"size":1757,"mtime":1611028880857,"results":"23","hashOfConfig":"22"},{"size":569,"mtime":1610958909682,"results":"24","hashOfConfig":"22"},{"size":1400,"mtime":1611028854690,"results":"25","hashOfConfig":"22"},{"size":4590,"mtime":1611028973833,"results":"26","hashOfConfig":"22"},{"size":2703,"mtime":1611029258393,"results":"27","hashOfConfig":"22"},{"size":3512,"mtime":1611033104326,"results":"28","hashOfConfig":"22"},{"size":1157,"mtime":1611005827366,"results":"29","hashOfConfig":"22"},{"size":230,"mtime":1611029186706,"results":"30","hashOfConfig":"22"},{"size":686,"mtime":1611029138464,"results":"31","hashOfConfig":"22"},{"size":286,"mtime":1610952437992,"results":"32","hashOfConfig":"22"},{"size":1564,"mtime":1610951932915,"results":"33","hashOfConfig":"22"},{"size":890,"mtime":1611029058998,"results":"34","hashOfConfig":"22"},{"size":125,"mtime":1610953364297,"results":"35","hashOfConfig":"22"},{"size":2152,"mtime":1611033329375,"results":"36","hashOfConfig":"22"},{"size":333,"mtime":1610959493830,"results":"37","hashOfConfig":"22"},{"size":352,"mtime":1610946850457,"results":"38","hashOfConfig":"22"},{"size":532,"mtime":1611029010932,"results":"39","hashOfConfig":"22"},{"size":1239,"mtime":1611031792829,"results":"40","hashOfConfig":"22"},{"size":2430,"mtime":1611030576459,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"ljh3lg",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"50"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"70"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"75"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/savage/Desktop/programming/e_commerce/src/index.js",[],["88","89"],"/home/savage/Desktop/programming/e_commerce/src/components/Cart/Cart.jsx",[],["90","91"],"/home/savage/Desktop/programming/e_commerce/src/components/Cart/styles.js",[],["92","93"],"/home/savage/Desktop/programming/e_commerce/src/components/Cart/CartItem/CartItem.jsx",[],"/home/savage/Desktop/programming/e_commerce/src/components/CheckoutForm/AddressForm.jsx",["94","95"],"import React, { useState, useEffect } from 'react';\nimport { InputLabel, Select, MenuItem, Button, Grid, Typography } from '@material-ui/core';\nimport { useForm, FormProvider } from 'react-hook-form';\nimport { Link } from 'react-router-dom';\n\nimport { commerce } from '../../lib/commerce';\nimport FormInput from './CustomTextField';\n\nconst AddressForm = ({ checkoutToken, test }) => {\n  const [shippingCountries, setShippingCountries] = useState([]);\n  const [shippingCountry, setShippingCountry] = useState('');\n  const [shippingSubdivisions, setShippingSubdivisions] = useState([]);\n  const [shippingSubdivision, setShippingSubdivision] = useState('');\n  const [shippingOptions, setShippingOptions] = useState([]);\n  const [shippingOption, setShippingOption] = useState('');\n  const methods = useForm();\n\n  const fetchShippingCountries = async (checkoutTokenId) => {\n    const { countries } = await commerce.services.localeListShippingCountries(checkoutTokenId);\n\n    setShippingCountries(countries);\n    setShippingCountry(Object.keys(countries)[0]);\n  };\n\n  const fetchSubdivisions = async (countryCode) => {\n    const { subdivisions } = await commerce.services.localeListSubdivisions(countryCode);\n\n    setShippingSubdivisions(subdivisions);\n    setShippingSubdivision(Object.keys(subdivisions)[0]);\n  };\n\n  const fetchShippingOptions = async (checkoutTokenId, country, stateProvince = null) => {\n    const options = await commerce.checkout.getShippingOptions(checkoutTokenId, { country, region: stateProvince });\n\n    setShippingOptions(options);\n    setShippingOption(options[0].id);\n  };\n\n  useEffect(() => {\n    fetchShippingCountries(checkoutToken.id);\n  }, []);\n\n  useEffect(() => {\n    if (shippingCountry) fetchSubdivisions(shippingCountry);\n  }, [shippingCountry]);\n\n  useEffect(() => {\n    if (shippingSubdivision) fetchShippingOptions(checkoutToken.id, shippingCountry, shippingSubdivision);\n  }, [shippingSubdivision]);\n\n  return (\n    <>\n      <Typography variant=\"h6\" gutterBottom>Shipping address</Typography>\n      <FormProvider {...methods}>\n        <form onSubmit={methods.handleSubmit((data) => test({ ...data, shippingCountry, shippingSubdivision, shippingOption }))}>\n          <Grid container spacing={3}>\n            <FormInput required name=\"firstName\" label=\"First name\" />\n            <FormInput required name=\"lastName\" label=\"Last name\" />\n            <FormInput required name=\"address1\" label=\"Address line 1\" />\n            <FormInput required name=\"email\" label=\"Email\" />\n            <FormInput required name=\"city\" label=\"City\" />\n            <FormInput required name=\"zip\" label=\"Zip / Postal code\" />\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Country</InputLabel>\n              <Select value={shippingCountry} fullWidth onChange={(e) => setShippingCountry(e.target.value)}>\n                {Object.entries(shippingCountries).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Subdivision</InputLabel>\n              <Select value={shippingSubdivision} fullWidth onChange={(e) => setShippingSubdivision(e.target.value)}>\n                {Object.entries(shippingSubdivisions).map(([code, name]) => ({ id: code, label: name })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <InputLabel>Shipping Options</InputLabel>\n              <Select value={shippingOption} fullWidth onChange={(e) => setShippingOption(e.target.value)}>\n                {shippingOptions.map((sO) => ({ id: sO.id, label: `${sO.description} - (${sO.price.formatted_with_symbol})` })).map((item) => (\n                  <MenuItem key={item.id} value={item.id}>\n                    {item.label}\n                  </MenuItem>\n                ))}\n              </Select>\n            </Grid>\n          </Grid>\n          <br />\n          <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n            <Button component={Link} variant=\"outlined\" to=\"/cart\">Back to Cart</Button>\n            <Button type=\"submit\" variant=\"contained\" color=\"primary\">Next</Button>\n          </div>\n        </form>\n      </FormProvider>\n    </>\n  );\n};\nexport default AddressForm;","/home/savage/Desktop/programming/e_commerce/src/App.js",[],"/home/savage/Desktop/programming/e_commerce/src/components/CheckoutForm/Checkout/Checkout.jsx",["96"],"/home/savage/Desktop/programming/e_commerce/src/components/CheckoutForm/Checkout/styles.js",[],"/home/savage/Desktop/programming/e_commerce/src/components/index.js",[],"/home/savage/Desktop/programming/e_commerce/src/components/Products/Products.jsx",[],"/home/savage/Desktop/programming/e_commerce/src/components/Products/styles.js",[],"/home/savage/Desktop/programming/e_commerce/src/components/Navbar/styles.js",[],["97","98"],"/home/savage/Desktop/programming/e_commerce/src/components/CheckoutForm/Review.jsx",[],"/home/savage/Desktop/programming/e_commerce/src/lib/commerce.js",[],["99","100"],"/home/savage/Desktop/programming/e_commerce/src/components/Navbar/Navbar.jsx",[],"/home/savage/Desktop/programming/e_commerce/src/components/Cart/CartItem/styles.js",[],"/home/savage/Desktop/programming/e_commerce/src/components/Products/Product/styles.js",[],"/home/savage/Desktop/programming/e_commerce/src/components/CheckoutForm/CustomTextField.jsx",[],"/home/savage/Desktop/programming/e_commerce/src/components/Products/Product/Product.jsx",[],"/home/savage/Desktop/programming/e_commerce/src/components/CheckoutForm/PaymentForm.jsx",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"101","replacedBy":"105"},{"ruleId":"103","replacedBy":"106"},{"ruleId":"101","replacedBy":"107"},{"ruleId":"103","replacedBy":"108"},{"ruleId":"109","severity":1,"message":"110","line":41,"column":6,"nodeType":"111","endLine":41,"endColumn":8,"suggestions":"112"},{"ruleId":"109","severity":1,"message":"113","line":49,"column":6,"nodeType":"111","endLine":49,"endColumn":27,"suggestions":"114"},{"ruleId":"109","severity":1,"message":"115","line":37,"column":6,"nodeType":"111","endLine":37,"endColumn":12,"suggestions":"116"},{"ruleId":"101","replacedBy":"117"},{"ruleId":"103","replacedBy":"118"},{"ruleId":"101","replacedBy":"119"},{"ruleId":"103","replacedBy":"120"},"no-native-reassign",["121"],"no-negated-in-lhs",["122"],["121"],["122"],["121"],["122"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'checkoutToken.id'. Either include it or remove the dependency array.","ArrayExpression",["123"],"React Hook useEffect has missing dependencies: 'checkoutToken.id' and 'shippingCountry'. Either include them or remove the dependency array.",["124"],"React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["125"],["121"],["122"],["121"],["122"],"no-global-assign","no-unsafe-negation",{"desc":"126","fix":"127"},{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},"Update the dependencies array to be: [checkoutToken.id]",{"range":"132","text":"133"},"Update the dependencies array to be: [checkoutToken.id, shippingCountry, shippingSubdivision]",{"range":"134","text":"135"},"Update the dependencies array to be: [cart, history]",{"range":"136","text":"137"},[1668,1670],"[checkoutToken.id]",[1913,1934],"[checkoutToken.id, shippingCountry, shippingSubdivision]",[1308,1314],"[cart, history]"]